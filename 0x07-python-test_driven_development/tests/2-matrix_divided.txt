Test cases for '2-matrix_divided.py'
=================================

divide element of a matrix with a divisor using the function 'matrix_divided'
----------------------------------------------------------------------------

Import 'matrix_divided'
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

cases to be evaluted:

case #1: Test with a string of strings
>>> matrix_divided([["alx", 1, 2],[3, 7, 8]], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

case #2: Test with a list of different size
>>> matrix_divided([[1, 7, 8, 9],[2, 9, 7]], 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

case #3: Test divisor variable with string or character
>>> matrix_divided([[2, 3, 4], [5, 6, 7]], 'a')
Traceback (most recent call last):
...
TypeError: div must be a number

case #4: Test by equating div variable to 0
>>> matrix_divided([[2, 3, 4],[5, 6, 8]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

case #5: Test with the right input
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
